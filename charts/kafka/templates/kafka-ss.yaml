apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: kafka
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      service: kafka
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        service: kafka
    spec:
      enableServiceLinks: false
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: {{ .Values.confluent.kafka }}:{{ .Values.confluent.version }}
        ports:
          - containerPort: 29092
          - containerPort: 9092
        env:
          - name: CONFLUENT_SUPPORT_CUSTOMER_ID
            value: "anonymous"
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INTERNAL://kafka:29092,LISTENER_EXTERNAL://localhost:9092"
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_LISTENERS
            value: "INTERNAL://:29092,LISTENER_EXTERNAL://:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT"
          - name: KAFKA_NUM_PARTITIONS
            value: "1"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_LOG_CLEANUP_POLICY
            value: "compact"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        resources: {}
        # volumeMounts:
        #   - mountPath: /var/lib/kafka/data
        #     name: kafka-data
      hostname: kafka
      restartPolicy: Always
  # volumeClaimTemplates:
  #   - metadata:
  #       name: kafka-data
  #     spec:
  #       accessModes:
  #         - {{ .Values.persistence.accessMode | quote }}
  #       resources:
  #         requests:
  #           storage: {{ .Values.persistence.size | quote }}
  #     {{- if .Values.persistence.storageClass }}
  #       {{- if (eq "-" .Values.persistence.storageClass) }}
  #       storageClassName: ""
  #       {{- else }}
  #       storageClassName: "{{ .Values.persistence.storageClass }}"
  #       {{- end }}
  #     {{- end }}