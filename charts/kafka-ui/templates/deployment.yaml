{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-ui.fullname" . }}
  labels:
    {{- include "kafka-ui.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "kafka-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "kafka-ui.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kafka-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers: # sidecar container to wait for a service to be completed.
        - name: wait-for-keycloak-service
          image: darthcabs/tiny-tools:1
          args:
          - /bin/bash
          - -c
          - >
            set -x;
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' curl \
                          -X GET "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/" \
                          -H 'Content-Type: application/json' --insecure | tail -c 3)" != "200" ]]; do 
              echo '.'
              sleep 15;
            done
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "kafka-ui.imageName" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "SERVER_SERVLET_CONTEXT_PATH"
              value: /{{ .Release.Namespace }}{{ .Values.envs.config.SERVER_SERVLET_CONTEXT_PATH_PARTIAL}}
            {{- with .Values.env }}
              {{- toYaml . | indent 12 }}
            {{- end }}
            - name: SPRING_CONFIG_LOCATION
              value: /kafka-ui/config.yml
          envFrom:
            {{- if .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
            {{- end }}
            {{- if .Values.envs.secret}}
            - secretRef:
                name: {{ include "kafka-ui.fullname" . }}
            {{- end}}    
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              {{- $contextPath := .Values.envs.config.SERVER_SERVLET_CONTEXT_PATH_PARTIAL | default "" | printf "%s/actuator/health" | urlParse }}
              path: /{{ .Release.Namespace }}{{ get $contextPath "path" }}
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              {{- $contextPath := .Values.envs.config.SERVER_SERVLET_CONTEXT_PATH_PARTIAL  | default "" | printf "%s/actuator/health" | urlParse }}
              path: /{{ .Release.Namespace }}{{ get $contextPath "path" }}
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.volumeMounts }} 
              {{- toYaml . | nindent 12 }}
            {{- end }}
            - name: v-kafka-ui-yaml-conf
              mountPath: /kafka-ui/config.yml
              subPath: config.yml
      volumes:
        {{- with .Values.volumes }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: v-kafka-ui-yaml-conf
          configMap: 
            name: cm-{{ include "kafka-ui.fullname" . }}-fromvalues
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}