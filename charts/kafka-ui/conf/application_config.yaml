---
kafka:
  clusters:
    - name: atlas
      bootstrapServers: "kafka.{{ .Release.Namespace }}.svc.cluster.local:9092"
      kafkaConnect:
        name: connect
        address: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/kafka-connect"
spring:
  logging:
    level: DEBUG
    file: ${java.io.tmpdir}/kafka-ui.log
  # security:
  #   oauth2:
  #     client:
  #       registration:
  #         keycloak:
  #           clientId: m4i_kafka_ui
  #           client-secret: hello-world
  #           authorization-grant-type: authorization_code
  #           scope:
  #             - openid
  #             - profile
  #             - email
  #           redirect-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/kafka-ui/login/oauth2/code/{registrationId}"
  #           clientName: keycloak
  #           provider: keycloak
  #       provider:
  #         keycloak:
  #           authorization-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/realms/m4i/protocol/openid-connect/auth"
  #           token-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/realms/m4i/protocol/openid-connect/token"
  #           user-info-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/realms/m4i/protocol/openid-connect/userinfo"
  #           user-info-authentication-method: header
  #           jwk-set-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/realms/m4i/protocol/openid-connect/certs"
  #           user-name-attribute: preferred_username
management:
  health:
    ldap:
      enabled: false
auth:
  type: OAUTH2
  oauth2:
    client:
      keycloak:
        clientId: m4i_kafka_ui
        clientSecret: hello-world
        #authorization-grant-type: authorization_code
        scope:
          - openid
          - profile
          - email
        issuer-uri: "https://{{ .Values.global.external_hostname }}/{{ .Release.Namespace }}/auth/realms/m4i"
        user-name-attribute: preferred_username
        client-name: keycloak
        provider: keycloak
        custom-params:
          type: keycloak
